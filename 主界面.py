# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from 角色修改 import modify_char
from 角色修改 import Ui_Form
class Ui_Main(object):
    def setupUi(self, Main):
        Main.setObjectName("Main")
        Main.resize(1000, 800)
        self.centralwidget = QtWidgets.QWidget(Main)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1000, 800))
        self.tabWidget.setObjectName("tabWidget")
        self.tab1 = QtWidgets.QWidget()
        self.tab1.setObjectName("tab1")
        self.rankexp = QtWidgets.QLabel(self.tab1)
        self.rankexp.setGeometry(QtCore.QRect(40, 30, 161, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.rankexp.setFont(font)
        self.rankexp.setObjectName("rankexp")
        self.rankexpedit = QtWidgets.QLineEdit(self.tab1)
        self.rankexpedit.setGeometry(QtCore.QRect(210, 30, 161, 41))
        self.rankexpedit.setObjectName("rankexpedit")
        self.rankexpsave = QtWidgets.QPushButton(self.tab1)
        self.rankexpsave.setGeometry(QtCore.QRect(410, 40, 41, 23))
        self.rankexpsave.setObjectName("rankexpsave")
        self.layoutWidget = QtWidgets.QWidget(self.tab1)
        self.layoutWidget.setGeometry(QtCore.QRect(40, 80, 820, 614))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.frame_5 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_5.setMinimumSize(QtCore.QSize(200, 200))
        self.frame_5.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.label_5 = QtWidgets.QLabel(self.frame_5)
        self.label_5.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_5.setObjectName("label_5")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_5)
        self.pushButton_5.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout.addWidget(self.frame_5, 2, 0, 1, 1)
        self.frame_7 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_7.setMinimumSize(QtCore.QSize(200, 200))
        self.frame_7.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.label_7 = QtWidgets.QLabel(self.frame_7)
        self.label_7.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_7.setObjectName("label_7")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_7)
        self.pushButton_7.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_7.setObjectName("pushButton_7")
        self.gridLayout.addWidget(self.frame_7, 2, 2, 1, 1)
        self.frame_6 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_6.setMinimumSize(QtCore.QSize(100, 200))
        self.frame_6.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.label_6 = QtWidgets.QLabel(self.frame_6)
        self.label_6.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_6.setObjectName("label_6")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_6)
        self.pushButton_6.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout.addWidget(self.frame_6, 2, 1, 1, 1)
        self.frame_8 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_8.setMinimumSize(QtCore.QSize(100, 100))
        self.frame_8.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.label_8 = QtWidgets.QLabel(self.frame_8)
        self.label_8.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_8.setObjectName("label_8")
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_8)
        self.pushButton_8.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_8.setObjectName("pushButton_8")
        self.gridLayout.addWidget(self.frame_8, 2, 3, 1, 1)
        self.frame_1 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_1.setMinimumSize(QtCore.QSize(200, 200))
        self.frame_1.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_1.setSizeIncrement(QtCore.QSize(0, 0))
        self.frame_1.setBaseSize(QtCore.QSize(0, 0))
        self.frame_1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_1.setObjectName("frame_1")
        self.label_1 = QtWidgets.QLabel(self.frame_1)
        self.label_1.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_1.setObjectName("label_1")
        self.pushButton_1 = QtWidgets.QPushButton(self.frame_1)
        self.pushButton_1.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_1.setObjectName("pushButton_1")
        self.gridLayout.addWidget(self.frame_1, 1, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_2.setMinimumSize(QtCore.QSize(200, 100))
        self.frame_2.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        self.label_2.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_2.setObjectName("label_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_2.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.frame_2, 1, 1, 1, 1)
        self.frame_3 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_3.setMinimumSize(QtCore.QSize(200, 200))
        self.frame_3.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.label_3 = QtWidgets.QLabel(self.frame_3)
        self.label_3.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_3.setObjectName("label_3")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_3.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.frame_3, 1, 2, 1, 1)
        self.frame_4 = QtWidgets.QFrame(self.layoutWidget)
        self.frame_4.setMinimumSize(QtCore.QSize(200, 200))
        self.frame_4.setMaximumSize(QtCore.QSize(99999, 99999))
        self.frame_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.label_4 = QtWidgets.QLabel(self.frame_4)
        self.label_4.setGeometry(QtCore.QRect(23, 14, 200, 250))
        self.label_4.setObjectName("label_4")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_4.setGeometry(QtCore.QRect(80, 140, 41, 23))
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout.addWidget(self.frame_4, 1, 3, 1, 1)
        self.tabWidget.addTab(self.tab1, "")
        self.tab2 = QtWidgets.QWidget()
        self.tab2.setObjectName("tab2")
        self.tableWidget = QtWidgets.QTableWidget(self.tab2)
        self.tableWidget.setGeometry(QtCore.QRect(40, 50, 901, 531))
        self.tableWidget.setSizeIncrement(QtCore.QSize(5, 5))
        font = QtGui.QFont()
        font.setUnderline(False)
        self.tableWidget.setFont(font)
        self.tableWidget.setProperty("showDropIndicator", True)
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setWordWrap(True)
        self.tableWidget.setCornerButtonEnabled(True)
        self.tableWidget.setRowCount(250)
        self.tableWidget.setColumnCount(3)
        header = self.tableWidget.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.Stretch)
        self.tableWidget.setObjectName("tableWidget")
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 0, item)
        self.pushButton_9 = QtWidgets.QPushButton(self.tab2)
        self.pushButton_9.setGeometry(QtCore.QRect(20, 10, 141, 23))
        self.pushButton_9.setObjectName("pushButton_9")
        self.tabWidget.addTab(self.tab2, "")
        self.tab3 = QtWidgets.QWidget()
        self.tab3.setObjectName("tab3")
        self.tabWidget.addTab(self.tab3, "")
        self.tab4 = QtWidgets.QWidget()
        self.tab4.setObjectName("tab4")
        self.tabWidget.addTab(self.tab4, "")
        self.tab5 = QtWidgets.QWidget()
        self.tab5.setObjectName("tab5")
        self.tabWidget.addTab(self.tab5, "")
        Main.setCentralWidget(self.centralwidget)
        self.pushButton_1.clicked.connect(lambda:self.open_modify_char(0))
        self.pushButton_2.clicked.connect(lambda:self.open_modify_char(1))
        self.pushButton_3.clicked.connect(lambda:self.open_modify_char(2))
        self.pushButton_4.clicked.connect(lambda:self.open_modify_char(3))
        self.pushButton_5.clicked.connect(lambda:self.open_modify_char(4))
        self.pushButton_6.clicked.connect(lambda:self.open_modify_char(5))
        self.pushButton_7.clicked.connect(lambda:self.open_modify_char(6))
        self.pushButton_8.clicked.connect(lambda:self.open_modify_char(7))
        # 加载并显示数据
        self.load_data()

        # 绑定按钮事件
        self.pushButton_9.clicked.connect(self.add_item)
    



        import os
        from 角色修改 import path0,trans_text,get_CharName,load_bin_file,load_translation_file,load_config,resource_path
        self.retranslateUi(Main)
        for i in range(0,8):
            try:
                getattr(self, f'label_{i+1}').setPixmap(QtGui.QPixmap(os.path.join(resource_path('角色图片'), trans_text(load_translation_file(resource_path(load_config()["trans_path"])), get_CharName(load_bin_file(path0(load_config()['output_path_1'])), i), 'img'))))
            
            except:pass
        self.rankexpedit.setText(str(load_bin_file(path0(load_config()['output_path_1']))['playerData']['m_WayfinderRankData']['m_WayfinderExperience']))
        self.rankexpsave.clicked.connect(lambda:self.save_rankexp())



        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Main)
    def save_rankexp(self):
        from 角色修改 import path0, load_bin_file, load_config

        # Load the JSON data
        config = load_config()
        file_path = path0(config['output_path_1'])
        bin_data = load_bin_file(file_path)

        # Update the JSON data
        bin_data['playerData']['m_WayfinderRankData']['m_WayfinderExperience'] = int(self.rankexpedit.text())

        # Write the updated JSON data back to the file
        with open(file_path, 'w', encoding='utf-8') as bin_file:
            import json
            json.dump(bin_data, bin_file, ensure_ascii=False, indent=2)

        # Show success message
        QtWidgets.QMessageBox.information(None, '提示', '保存成功！')
    def open_modify_char(self,i):
        self.char_window = QtWidgets.QWidget()
        self.ui_char = Ui_Form()    
        try:
            self.ui_char.setupUi(self.char_window, i)  # Adjust index as needed
        except:
            return 
        self.char_window.show()
    def retranslateUi(self, Main):
        _translate = QtCore.QCoreApplication.translate
        Main.setWindowTitle(_translate("Main", "WayfinderSaveEditor"))
        self.rankexp.setText(_translate("Main", "账号rank经验"))
        self.rankexpsave.setText(_translate("Main", "保存"))
        self.label_5.setText(_translate("Main", "角色5"))
        self.pushButton_5.setText(_translate("Main", "修改"))
        self.label_7.setText(_translate("Main", "角色7"))
        self.pushButton_7.setText(_translate("Main", "修改"))
        self.label_6.setText(_translate("Main", "角色6"))
        self.pushButton_6.setText(_translate("Main", "修改"))
        self.label_1.setText(_translate("Main", "角色1"))
        self.pushButton_1.setText(_translate("Main", "修改"))
        self.label_3.setText(_translate("Main", "角色3"))
        self.pushButton_3.setText(_translate("Main", "修改"))
        self.label_8.setText(_translate("Main", "角色8"))
        self.pushButton_8.setText(_translate("Main", "修改"))
        self.label_2.setText(_translate("Main", "角色2"))
        self.pushButton_2.setText(_translate("Main", "修改"))
        self.label_4.setText(_translate("Main", "角色4"))
        self.pushButton_4.setText(_translate("Main", "修改"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab1), _translate("Main", "角色"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.pushButton_9.setText(_translate("Main", "添加物品"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab2), _translate("Main", "背包物品"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab3), _translate("Main", "武器"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab4), _translate("Main", "回响"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab5), _translate("Main", "饰品"))
    def load_data(self):
        # 读取 bin 文件数据
        from 角色修改 import path0, load_bin_file, load_config
        config = load_config()
        self.data = load_bin_file(path0(config['output_path_1']))

        # 获取 m_FungibleItems
        items = self.data['playerData']['m_InventoryData']['m_FungibleItems']

        # 清空表格
        self.tableWidget.setRowCount(0)

        # 填充表格数据
        for item in items:
            rowPosition = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowPosition)
            self.tableWidget.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(item['name']))
            self.tableWidget.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(str(item['count'])))

            # 添加修改按钮
            btn = QtWidgets.QPushButton('修改')
            btn.clicked.connect(lambda _, r=rowPosition: self.edit_item(r))
            self.tableWidget.setCellWidget(rowPosition, 2, btn)
    def edit_item(self, row):
        # 获取选中行数据
        item_name = self.tableWidget.item(row, 0).text()
        current_count = int(self.tableWidget.item(row, 1).text())

        # 弹出修改窗口
        self.edit_window = QtWidgets.QWidget()
        self.edit_window.setWindowTitle("修改物品数量")
        self.edit_window.setGeometry(400, 400, 300, 200)

        self.new_count_input = QtWidgets.QLineEdit(self.edit_window)
        self.new_count_input.setGeometry(50, 50, 200, 30)
        self.new_count_input.setText(str(current_count))

        self.save_btn = QtWidgets.QPushButton("保存", self.edit_window)
        self.save_btn.setGeometry(100, 100, 100, 30)
        self.save_btn.clicked.connect(lambda: self.save_item(row))

        self.edit_window.show()
    def save_item(self, row):
        # 获取修改后的数量
        new_count = int(self.new_count_input.text())

        # 更新表格数据
        self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str(new_count)))

        # 更新数据结构
        item_name = self.tableWidget.item(row, 0).text()
        items = self.data['playerData']['m_InventoryData']['m_FungibleItems']
        for item in items:
            if item['name'] == item_name:
                item['count'] = new_count
                break
        from 角色修改 import path0,load_config
        config = load_config()
        file_path = path0(config['output_path_1'])   
        # 保存数据
        with open(file_path, 'w', encoding='utf-8') as bin_file:
            import json
            json.dump(self.data, bin_file, ensure_ascii=False, indent=2)
            QtWidgets.QMessageBox.information(None, '提示', '保存成功！')

        # 关闭编辑窗口
        self.edit_window.close()
    def add_item(self):
        # 弹出添加窗口
        self.add_window = QtWidgets.QWidget()
        self.add_window.setWindowTitle("添加物品")
        self.add_window.setGeometry(400, 400, 400, 300)

        # 物品名称输入
        self.name_input = QtWidgets.QLineEdit(self.add_window)
        self.name_input.setGeometry(50, 50, 300, 30)
        self.name_input.setPlaceholderText("物品名称")

        # 物品数量输入
        self.count_input = QtWidgets.QLineEdit(self.add_window)
        self.count_input.setGeometry(50, 100, 300, 30)
        self.count_input.setPlaceholderText("物品数量")

        # 生成按钮
        self.generate_btn = QtWidgets.QPushButton("生成", self.add_window)
        self.generate_btn.setGeometry(150, 150, 100, 30)
        self.generate_btn.clicked.connect(self.generate_item)

        self.add_window.show()
    def generate_item(self):
        import json
        # 获取输入数据
        item_name = self.name_input.text()
        item_count = int(self.count_input.text())

        # 检查是否已经存在该物品
        items = self.data['playerData']['m_InventoryData']['m_FungibleItems']
        item_found = False
        for item in items:
            if item['name'] == item_name:
                item['count'] += item_count
                item_found = True
                break

        if not item_found:
            # 添加新物品
            new_item = {
                "name": item_name,
                "equippedSlotId": "00000000000000000000000000000000",
                "equippedSlotName": "None",
                "count": item_count,
                "itemFlags": 0
            }
            items.append(new_item)

        from 角色修改 import path0,load_config
        config = load_config()
        file_path = path0(config['output_path_1'])   
        # 保存数据
        with open(file_path, 'w', encoding='utf-8') as bin_file:
            import json
            json.dump(self.data, bin_file, ensure_ascii=False, indent=2)
            QtWidgets.QMessageBox.information(None, '提示', '保存成功！')
        # 关闭添加窗口
        self.add_window.close()

        # 刷新表格
        self.load_data()
def GetMain():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Main = QtWidgets.QMainWindow()
    ui = Ui_Main()
    ui.setupUi(Main)
    Main.show()

    app.exec_()
        